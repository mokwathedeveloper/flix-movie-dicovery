# Netlify Configuration for FLIX Movie Discovery Platform
# This configuration ensures proper deployment of the React SPA with routing support

[build]
  # Build command to run
  command = "npm run build"
  
  # Directory to publish (contains the built static files)
  publish = "dist"
  
  # Node.js version to use during build
  [build.environment]
    NODE_VERSION = "18"
    NPM_VERSION = "9"

# SPA routing support - redirect all routes to index.html
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Security headers for enhanced security
[[headers]]
  for = "/*"
  [headers.values]
    # Content Security Policy
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://api.themoviedb.org https://www.omdbapi.com; font-src 'self' data:; object-src 'none'; base-uri 'self'; frame-ancestors 'none';"
    
    # Prevent MIME type sniffing
    X-Content-Type-Options = "nosniff"
    
    # Enable XSS protection
    X-XSS-Protection = "1; mode=block"
    
    # Prevent clickjacking
    X-Frame-Options = "DENY"
    
    # Force HTTPS
    Strict-Transport-Security = "max-age=31536000; includeSubDomains"
    
    # Referrer policy
    Referrer-Policy = "strict-origin-when-cross-origin"

# Cache static assets for better performance
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Cache service worker with shorter duration
[[headers]]
  for = "/sw.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Cache manifest with shorter duration
[[headers]]
  for = "/manifest.json"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# Environment variables for demo deployment
# Note: These should be configured in Netlify dashboard for security
# VITE_TMDB_API_KEY = "demo_api_key_here"
# VITE_OMDB_API_KEY = "demo_api_key_here"
# VITE_ENABLE_PWA = "true"
# VITE_ENABLE_ANALYTICS = "false"

# Build plugins for optimization
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs.thresholds]
    performance = 0.8
    accessibility = 0.9
    best-practices = 0.8
    seo = 0.8

# Form handling (if needed for contact forms)
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

# Functions directory (for future serverless functions if needed)
[functions]
  directory = "netlify/functions"
