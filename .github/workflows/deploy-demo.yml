# GitHub Actions workflow for deploying FLIX demo to GitHub Pages
# This workflow builds and deploys the application when changes are pushed to main branch

name: Deploy Demo to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test -- --run

      - name: Build application
        run: npm run build
        env:
          # Demo environment variables
          # Note: For security, actual API keys should be stored in GitHub Secrets
          VITE_TMDB_API_KEY: ${{ secrets.DEMO_TMDB_API_KEY }}
          VITE_OMDB_API_KEY: ${{ secrets.DEMO_OMDB_API_KEY }}
          VITE_ENABLE_PWA: true
          VITE_ENABLE_ANALYTICS: false
          VITE_APP_NAME: "FLIX Movie Discovery - Demo"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
